tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_basic_types: https://raw.githubusercontent.com/AkumuYuma/tosca-types/main/tosca_types/base/basic_types.yaml
metadata:
  template_author: Emanuele-Fiorente
  template_name: jupyterHub_satellite
  template_version: 1.0.0


artifact_types:

  tosca.artifacts.Implementation.YAML:
    derived_from: tosca.artifacts.Implementation
    description: YAML Ansible recipe artifact
    mime_type: text/yaml
    file_ext: [ yaml, yml ]

  tosca.artifacts.AnsibleGalaxy.role:
    derived_from: tosca.artifacts.Root
    description: Ansible Galaxy role to be deployed in the target node

  tosca.artifacts.Deployment.Image.Container.Docker:
    derived_from: tosca.artifacts.Deployment.Image
    description: Docker Container Image

data_types: 

  tosca.datatypes.downloader.search-settings.geometry: 
    derived_from: tosca.datatypes.Root
    description: 
    properties: 
      lonmin:
        type: float 
        description: Minimum longitude
        required: true
      latmin:
        type: float 
        description: Minimum latitude
        required: true
      lonmax:
        type: float 
        description: Maximum longitude
        required: true
      latmax:
        type: float 
        description: Maximum latitude
        required: true

  tosca.datatypes.downloader.search-settings:
    derived_from: tosca.datatypes.Root
    description: 
    properties: 
      product-name: 
        type: string
        description: The name of the product to download 
        required: true 
      init-time: 
        type: string
        description: The initial sensing time of the search
        required: true 
      end-time: 
        type: string
        description: The ending sensing time of the search
        required: true 
      geometry: 
        type: tosca.datatypes.downloader.search-settings.geometry: 
        description: The rectangle to search in 
        required: true 
  
  tosca.datatypes.downloader.saving-settings: 
    derived_from: tosca.datatypes.Root
    description: 
    properties: 
      base-path: 
        type: string
        description: The path to download the data in
        required: false
      ext: 
        type: string
        description: The extension of the downloaded images 
        required: false
      config-path: 
        type: string
        description: The path to save the configuration into 
        required: true 

  tosca.datatypes.downloader.provider.credentials: 
    derived_from: tosca.datatypes.Root
    description: 
    properties: 
      credentials: 
        type: map 
        entry_schema: 
          type: string

  tosca.datatypes.downloader.provider: 
    derived_from: tosca.datatypes.Root 
    description: 
    properties: 
      priority: 
        type: integer 
        description: The priority of the provider
        required: false
        default: 0 
      auth: 
        type: tosca.datatypes.downloader.provider.credentials 
        descriptions: The credentials for the provider 
        required: true 

  tosca.datatypes.downloader.downloading_input:
    derived_from: tosca.datatypes.Root 
    description: 
    properties: 
      search-settings: 
        type: tosca.datatypes.downloader.search-settings
        description: The settings for the search 
        required: true 
      saving-settings: 
        type: tosca.datatypes.downloader.saving-settings
        description: The settings for the saving 
        required: true 
      providers: 
        type: map 
        description: A map of the providers settings
        required: true 
        entry_schema:
          type: tosca.datatypes.downlaoder.provider

node_types:

  tosca.nodes.DODAS.single-node-jupyterhub:
    derived_from: tosca.nodes.SoftwareComponent
    properties:

      install_docker:
        type: boolean
        default: true
      install_docker_compose:
        type: boolean
        default: true

      monitoring:
        type: boolean
        default: true
      monitoring_image:
        type: string
        default: dodasts/monitoring-grafana:v1.0.7-monitoring

      iam_url:
        type: string
        default: "https://iam.recas.ba.infn.it/"

      # The uuid of the iam user to be administrator of the jupyterHubService. 
      iam_subject: 
        type: string
        required: yes
      # The iam group authorized to be users of the service 
      iam_groups:
        type: string
        default: "beta_tester"
      iam_admin_groups:
        type: string
        default: "beta_tester"

      prepare_jupyter:
        type: boolean
        default: true
      run_jupyter:
        type: boolean
        default: true
      jupyter_hub_image: # Docker image for jupyterHub Docker container 
        type: string
        default: "dodasts/snj-base-jhub:v1.0.2p1-snj"
      jupyter_images: # Docker image for jupyterLab Docker container, this needs to be modified to avoid persistency  
        type: string
        default: "dodasts/snj-base-lab-persistence:v1.0.0-snj"
      jupyter_use_gpu:
        type: boolean
        default: false

      jupyter_post_start_cmd: 
        type: string
        default: ""
      jupyter_host_mount_dir: 
        type: string
        default: ""

        type: string
        default: ""
      server_ip:
        type: string
        default: ""

      role_name:
        type: string
        required: false
        default: ansible-role-jupyterhub-env

      downloading_input:
        type: tosca.datatypes.downloader.downloading_input:
        required: true 

    artifacts:
      ml_role:
        file: git+https://github.com/DODAS-TS/ansible-role-jupyterhub-env,v2.0.6
        type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        start:
          implementation: https://github.com/AkumuYuma/tosca-types/blob/main/artifacts/execute_role_and_download_data.yaml
          inputs:
            # input playbook 
            role_name: { get_property: [ SELF, role_name ] } 
            downloading_input: { get_property: [SELF, downloading_input] }

            # Input del ruolo DODAS-TS/ansible-role-jupyterhub
            install_docker: { get_property: [SELF, install_docker] }
            install_docker_compose: { get_property: [SELF, install_docker_compose] }
            monitoring: { get_property: [SELF, monitoring] }
            grafana_image: { get_property: [SELF, monitoring_image] }
            iam_url: { get_property: [SELF, iam_url] }
            iam_subject: { get_property: [SELF, iam_subject] }
            iam_groups: { get_property: [SELF, iam_groups] }
            iam_admin_groups: { get_property: [SELF, iam_admin_groups] }
            prepare_jupyter: { get_property: [SELF, prepare_jupyter] }
            run_jupyter: { get_property: [SELF, run_jupyter] }
            jupyter_hub_image: { get_property: [SELF, jupyter_hub_image] }
            jupyter_images: { get_property: [SELF, jupyter_images] }
            jupyter_use_gpu: { get_property: [SELF, jupyter_use_gpu] }
            jupyter_post_start_cmd: { get_property: [SELF, jupyter_post_start_cmd] }
            jupyter_host_mount_dir: { get_property: [SELF, jupyter_host_mount_dir] }
            cvmfs_repos: { get_property: [SELF, cvmfs_repos] }
            server_ip: { get_property: [SELF, server_ip] }

